@model List<lolapdp.Models.Course>

@{
    ViewData["Title"] = "Student Grades";
    var courseGrades = ViewBag.CourseGrades as Dictionary<string, List<(lolapdp.Models.User Student, lolapdp.Models.Grade Grade)>>;
}

<div class="container-fluid">
    <h2 class="d-flex align-items-center mb-4">
        <i class="bi bi-card-checklist me-2"></i> Student Grades
    </h2>

    <div class="mb-4">
        <label for="courseFilter" class="form-label">Filter by Course:</label>
        <select class="form-select" id="courseFilter">
            <option value="all">All Courses</option>
            @foreach (var course in Model)
            {
                <option value="@course.CourseId">@course.CourseName (@course.CourseId)</option>
            }
        </select>
    </div>

    @foreach (var course in Model)
    {
        <div class="card mb-4 course-card" data-course-id="@course.CourseId">
            <div class="card-header">
                <div class="d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">
                        <i class="bi bi-book me-2"></i>@course.CourseName (@course.CourseId)
                    </h5>
                    <span class="badge bg-primary">
                        <i class="bi bi-person-badge me-1"></i>Faculty: @course.Faculty
                    </span>
                </div>
            </div>
            <div class="card-body">
                @if (courseGrades != null && courseGrades.ContainsKey(course.CourseId))
                {
                    var grades = courseGrades[course.CourseId];
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Student</th>
                                    <th>Grade</th>
                                    <th>Date</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var (student, grade) in grades)
                                {
                                    <tr>
                                        <td>@student.FullName</td>
                                        <td>
                                            <span class="badge rounded-pill @(grade.Score >= 90 ? "bg-success" :
                                                                            grade.Score >= 70 ? "bg-primary" :
                                                                            grade.Score >= 50 ? "bg-warning" : "bg-danger")">
                                                @grade.Score.ToString("F1")
                                            </span>
                                        </td>
                                        <td>
                                            <span class="text-muted">
                                                <i class="bi bi-calendar-event me-1"></i>
                                                @grade.GradeDate.ToString("dd/MM/yyyy HH:mm")
                                            </span>
                                        </td>
                                    </tr>
                                }
                                @{
                                    var averageGrade = grades.Average(g => g.Grade.Score);
                                }
                                <tr class="table-active">
                                    <td><strong>Average Grade</strong></td>
                                    <td colspan="2">
                                        <span class="badge rounded-pill @(averageGrade >= 90 ? "bg-success" :
                                                                        averageGrade >= 70 ? "bg-primary" :
                                                                        averageGrade >= 50 ? "bg-warning" : "bg-danger")">
                                            @averageGrade.ToString("F2")
                                        </span>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="alert alert-info">
                        <i class="bi bi-info-circle me-2"></i>No grades available for this course.
                    </div>
                }
            </div>
        </div>
    }
</div>

@section Styles {
    <style>
        .card {
            border: none;
            border-radius: 0.5rem;
            margin-bottom: 1.5rem;
        }

        .card-header {
            background-color: #f8f9fa;
            border-bottom: 1px solid #dee2e6;
            padding: 1rem 1.5rem;
        }

        .card-body {
            padding: 1.5rem;
        }

        .table th {
            font-weight: 600;
            background-color: #f8f9fa;
        }

        .table td {
            vertical-align: middle;
        }

        .badge {
            font-weight: 500;
            padding: 0.5em 0.75em;
        }

        .badge.bg-success {
            background-color: #198754 !important;
        }

        .badge.bg-primary {
            background-color: #0d6efd !important;
        }

        .badge.bg-warning {
            background-color: #ffc107 !important;
            color: #000;
        }

        .badge.bg-danger {
            background-color: #dc3545 !important;
        }

        .badge.bg-info {
            background-color: #0dcaf0 !important;
        }

        .form-select {
            border-radius: 0.375rem;
            border: 1px solid #dee2e6;
            padding: 0.5rem 1rem;
        }

        .form-select:focus {
            border-color: #0d6efd;
            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
        }

        .text-muted {
            color: #6c757d !important;
        }

        .course-card:hover {
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;
            transition: box-shadow 0.3s ease-in-out;
        }
    </style>
}

@section Scripts {
    <script>
        document.getElementById('courseFilter').addEventListener('change', function() {
            const selectedCourse = this.value;
            const courseCards = document.querySelectorAll('.course-card');

            courseCards.forEach(card => {
                if (selectedCourse === 'all' || card.dataset.courseId === selectedCourse) {
                    card.style.display = 'block';
                } else {
                    card.style.display = 'none';
                }
            });
        });
    </script>
} 